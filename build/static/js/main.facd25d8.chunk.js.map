{"version":3,"sources":["components/Logo/assets/plain.svg","components/TicketsList/Filters/helpers/setAllFiltersAreFalse.js","components/TicketsList/Filters/helpers/checkAllFiltersAreTrue.js","components/TicketsList/Filters/consts.js","components/TicketsList/Filters/ducks.js","components/TicketsList/Filters/helpers/setInitialState.js","components/TicketsList/Sorts/consts.js","components/TicketsList/Sorts/ducks.js","components/TicketsList/Sorts/helpers/setInitialState.js","containers/App/ducks.js","api/index.js","containers/App/sagas.js","store.js","components/TicketsList/Filters/components/Transfer/styled.js","components/TicketsList/Filters/components/Transfer/index.js","components/TicketsList/helpers/sortingTickets.js","components/TicketsList/helpers/filteringTickets.js","components/TicketsList/selectors.js","components/TicketsList/Filters/styled.js","components/TicketsList/Filters/index.js","components/TicketsList/Sorts/components/SortTab/styled.js","components/TicketsList/Sorts/components/SortTab/index.js","components/TicketsList/Sorts/styled.js","components/TicketsList/Sorts/index.js","components/Ticket/helpers/getCarrierImg.js","components/Ticket/helpers/getFormattedPrice.js","components/Ticket/components/Segment/styled.js","components/Ticket/components/Segment/helpers/getFormattedTime.js","components/Ticket/components/Segment/helpers/getFormattedDuration.js","components/Ticket/components/Segment/helpers/getTransfersCount.js","components/Ticket/components/Segment/index.js","components/Ticket/styled.js","components/Ticket/index.js","components/TicketsList/styled.js","components/InformationCard/styled.js","components/InformationCard/index.js","components/TicketsList/index.js","components/Logo/styled.js","components/Logo/index.js","containers/App/styled.js","containers/App/index.js","index.js"],"names":["module","exports","setAllFiltersAreFalse","filters","newFiltersValues","Object","keys","forEach","key","checkAllFiltersAreTrue","filtersWithoutAllTransferFilterLength","filter","filterName","includes","length","result","TRANSFERS","actionCreators","changeFilter","payload","type","INITIAL_STATE","initialState","setInitialState","filtersReducer","state","newState","name","value","SORTS","changeSort","sortsReducer","getTickets","error","isError","getTicketsChain","tickets","getTicketsCompletely","isCompletely","getTicketsError","fetchTickets","searchId","a","fetch","response","json","fetchSearchId","getSearchId","watchSearchRequest","call","stop","put","setTimeout","takeLatest","rootReducer","combineReducers","filterReducer","sorts","sortReducer","ticketsData","ticketsReducer","sagaMiddleware","createSagaMiddleware","enhancers","compose","applyMiddleware","logger","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","run","Sagas","checkedStyles","css","StyledCheckbox","styled","div","props","checked","Label","label","HiddenCheckbox","input","attrs","TransferContainer","Transfer","title","onChangeFilter","htmlFor","id","onChange","event","target","handleChange","sortingTickets","sortingKey","sortTickets","sort","b","price","segments","reduce","acc","segment","duration","filteringTickets","filterKeys","ticket","stopsLength","stops","some","filterKey","isValidTicket","filterTicket","selectTicketsData","selectIsLoading","isLoading","selectIsCompletely","selectIsError","selectFilters","selectSorts","selectFilteredTickets","createSelector","filterTickets","Card","Title","TransfersWrapper","mapDispatchToProps","connect","entries","map","SortingButton","isSelected","SortTab","onChangeSort","onClick","SortTabs","getCarrierImg","iataCode","isRetina","getFormattedPrice","formattedPrice","toLocaleString","Text","SegmentWrapper","SegmentDataWrapper","getFormattedMinutes","date","formattedMinute","String","moment","minutes","padStart","getFormattedHours","formattedHours","hours","getFormattedTime","formattedDepartureTime","formattedArrivalTime","departureTime","add","getFormattedArrivalTime","departureMinute","departureHours","arrivalMinute","arrivalHours","arrivalTime","getDurationWithUnit","unit","getFormattedDuration","Math","floor","item","join","getTransferMessage","transfersLength","end","getTransfersCount","getSegmentDirection","origin","destination","SegmentData","children","Segment","stopLength","index","Wrapper","Price","Carrier","img","iata","src","srcRetina","srcSet","alt","TicketHeader","Ticket","carrier","Date","getTime","TicketsWrapper","InformationCard","text","slice","Logo","plain","Page","Main","Container","Header","SideBar","Content","App","this","PureComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.facd25d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plain.0c089234.svg\";","// @flow\n\ntype TArgs = {\n  [string]: string,\n}\n\nconst setAllFiltersAreFalse = (filters: TArgs) => {\n  const newFiltersValues = {}\n\n  Object.keys(filters).forEach((key) => {\n    newFiltersValues[key] = false\n  })\n\n  return newFiltersValues\n}\n\nexport default setAllFiltersAreFalse\n","// @flow\n\ntype TArgs = {\n  [string]: string,\n}\n\nconst checkAllFiltersAreTrue = (filters: TArgs): boolean => {\n  const filtersWithoutAllTransferFilterLength = Object.keys(filters)\n    .filter((filterName) => !filterName.includes('all')).length\n\n  let result = 0\n\n  Object.keys(filters).forEach((key) => {\n    if (!key.includes('all') && filters[key]) {\n      result += 1\n    }\n  })\n\n  return result === filtersWithoutAllTransferFilterLength\n}\n\nexport default checkAllFiltersAreTrue\n","const ALL_TRANSFERS_FILTER = 'transfer-all'\nconst TRANSFER_NONE = 'transfer-none'\nconst TRANSFER_ONE = 'transfer-one'\nconst TRANSFER_TWO = 'transfer-two'\nconst TRANSFER_THREE = 'transfer-three'\n\nconst TRANSFERS = {\n  [ALL_TRANSFERS_FILTER]: 'Все',\n  [TRANSFER_NONE]: 'Без пересадок',\n  [TRANSFER_ONE]: '1 пересадка',\n  [TRANSFER_TWO]: '2 пересадки',\n  [TRANSFER_THREE]: '3 пересадки',\n}\n\nexport {\n  TRANSFERS,\n  ALL_TRANSFERS_FILTER,\n  TRANSFER_NONE,\n  TRANSFER_ONE,\n  TRANSFER_TWO,\n  TRANSFER_THREE,\n}\n","import setAllFiltersAreFalse from './helpers/setAllFiltersAreFalse'\nimport checkAllFiltersAreTrue from './helpers/checkAllFiltersAreTrue'\nimport { ALL_TRANSFERS_FILTER } from './consts'\nimport setInitialState from './helpers/setInitialState'\n\nconst CHANGE_FILTER = 'CHANGE_FILTER'\n\nconst changeFilter = (payload) => ({\n  type: CHANGE_FILTER,\n  payload,\n})\n\nexport const actionCreators = {\n  changeFilter,\n}\n\nconst INITIAL_STATE = setInitialState()\n\nconst filtersReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER: {\n      const newState = {\n        ...state,\n        [payload.name]: payload.value,\n      }\n\n      if (payload.name.includes('all')) {\n        return payload.value ? INITIAL_STATE : setAllFiltersAreFalse(newState)\n      }\n\n      if (checkAllFiltersAreTrue(newState)) {\n        return INITIAL_STATE\n      }\n\n      return {\n        ...newState,\n        [ALL_TRANSFERS_FILTER]: false,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default filtersReducer\n","// @flow\n\nimport { TRANSFERS } from '../consts'\n\nconst setInitialState = () => {\n  const initialState = {}\n\n  Object.keys(TRANSFERS).forEach((key) => {\n    initialState[key] = true\n  })\n\n  return initialState\n}\n\nexport default setInitialState\n","const BY_CHEAP_SORT = 'by-cheap'\nconst BY_QUICK_SORT = 'by-quick'\n\nconst SORTS = {\n  [BY_CHEAP_SORT]: 'Самый дешевый',\n  [BY_QUICK_SORT]: 'Самый быстрый',\n}\n\nexport {\n  SORTS,\n  BY_CHEAP_SORT,\n  BY_QUICK_SORT,\n}\n","// @flow\n\nimport setInitialState from './helpers/setInitialState'\n\nconst CHANGE_SORT = 'CHANGE_SORT'\n\nconst changeSort = (payload) => ({\n  type: CHANGE_SORT,\n  payload,\n})\n\nexport const actionCreators = {\n  changeSort,\n}\n\n\nconst INITIAL_STATE = setInitialState()\n\nconst sortsReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case CHANGE_SORT:\n      return {\n        ...state,\n        key: payload.name,\n      }\n    default:\n      return state\n  }\n}\n\nexport default sortsReducer\n","// @flow\n\nimport { BY_CHEAP_SORT } from '../consts'\n\nconst setInitialState = () => ({\n  key: BY_CHEAP_SORT,\n})\n\nexport default setInitialState\n","// @flow\n\nexport const GET_TICKETS = 'GET_TICKETS'\nexport const GET_TICKETS_CHAIN = 'GET_TICKETS_CHAIN'\nexport const GET_TICKETS_COMPLETELY = 'GET_TICKETS_COMPLETELY'\nexport const GET_TICKETS_ERROR = 'GET_TICKETS_ERROR'\n\nconst getTickets = () => ({\n  type: GET_TICKETS,\n  payload: {\n    error: null,\n    isError: false,\n  },\n})\n\nconst getTicketsChain = (tickets) => ({\n  type: GET_TICKETS_CHAIN,\n  payload: {\n    tickets,\n    error: null,\n    isError: false,\n  },\n})\n\nconst getTicketsCompletely = (tickets) => ({\n  type: GET_TICKETS_COMPLETELY,\n  payload: {\n    tickets,\n    isCompletely: true,\n    error: null,\n    isError: false,\n  },\n})\n\nconst getTicketsError = (error) => ({\n  type: GET_TICKETS_ERROR,\n  payload: {\n    error,\n    isError: true,\n  },\n})\n\nexport const actionCreators = {\n  getTickets,\n  getTicketsChain,\n  getTicketsCompletely,\n  getTicketsError,\n}\n\n\nconst INITIAL_STATE = {\n  tickets: [],\n  error: null,\n  isCompletely: false,\n  isError: false,\n}\n\nconst sortsReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case GET_TICKETS:\n      return {\n        ...state,\n        ...payload,\n      }\n    case GET_TICKETS_CHAIN:\n      return {\n        ...state,\n        tickets: [\n          ...state.tickets,\n          ...payload.tickets,\n        ],\n        error: payload.error,\n        isError: payload.isError,\n      }\n    case GET_TICKETS_COMPLETELY:\n      return {\n        ...state,\n        tickets: [\n          ...state.tickets,\n          ...payload.tickets,\n        ],\n        isCompletely: payload.isCompletely,\n        error: payload.error,\n        isError: payload.isError,\n      }\n    case GET_TICKETS_ERROR: {\n      return {\n        ...state,\n        ...payload,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default sortsReducer\n","// @flow\n\nconst TICKETS_URL = 'https://front-test.beta.aviasales.ru/tickets'\nconst SEARCH_ID_URL = 'https://front-test.beta.aviasales.ru/search'\n\nconst fetchTickets = async (searchId: string) => {\n  const response = await fetch(`${TICKETS_URL}?searchId=${searchId}`)\n  const result = await response.json()\n\n  return result\n}\n\nconst fetchSearchId = async () => {\n  const response = await fetch(SEARCH_ID_URL)\n  const result = await response.json()\n\n  return result\n}\n\n\nexport {\n  fetchTickets,\n  fetchSearchId,\n}\n","import { call, takeLatest, put } from 'redux-saga/effects'\nimport { fetchSearchId, fetchTickets } from '../../api'\nimport {\n  GET_TICKETS,\n  actionCreators,\n} from './ducks'\n\nconst {\n  getTicketsChain,\n  getTicketsCompletely,\n  getTicketsError,\n} = actionCreators\n\nfunction* getTickets(searchId) {\n  try {\n    const response = yield call(fetchTickets, searchId)\n    const {\n      tickets,\n      stop,\n    } = response\n\n    yield put(getTicketsChain(tickets))\n\n    if (!stop) {\n      setTimeout(yield* getTickets(searchId), 1000)\n    } else {\n      yield put(getTicketsCompletely(tickets))\n    }\n  } catch (error) {\n    yield put(getTicketsError(error))\n\n    setTimeout(yield* getTickets(searchId), 1000)\n  }\n}\n\nfunction* getSearchId() {\n  try {\n    const { searchId } = yield call(fetchSearchId)\n\n    yield* getTickets(searchId)\n  } catch (error) {\n    yield put(getTicketsError(error))\n  }\n}\n\nfunction* watchSearchRequest() {\n  yield takeLatest(GET_TICKETS, getSearchId)\n}\n\nexport default watchSearchRequest\n","/* eslint-disable no-underscore-dangle */\nimport {\n  combineReducers, createStore, applyMiddleware, compose,\n} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport logger from 'redux-logger'\nimport filterReducer from './components/TicketsList/Filters/ducks'\nimport sortReducer from './components/TicketsList/Sorts/ducks'\nimport ticketsReducer from './containers/App/ducks'\nimport Sagas from './containers/App/sagas'\n\nconst rootReducer = combineReducers({\n  filters: filterReducer,\n  sorts: sortReducer,\n  ticketsData: ticketsReducer,\n})\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst enhancers = compose(\n  applyMiddleware(sagaMiddleware, logger),\n  window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : compose,\n)\nconst initialState = {}\n\nconst store = createStore(rootReducer, initialState, enhancers)\n\nsagaMiddleware.run(Sagas)\n\nexport default store\n","import styled, { css } from 'styled-components'\n\nconst checkedStyles = css`\n  &::after {\n    position: absolute;\n    content: '';\n    height: 5px;\n    width: 9px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    border-color: #2196F3;\n    transform: rotate(-45deg);\n\n    left: 4px;\n    top: 4px;\n  }\n`\n\nexport const StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  transition: all 150ms;\n  border: 1px solid #9ABBCE;\n  box-sizing: border-box;\n  border-radius: 2px;\n  position: relative;\n  margin-right: 10px;\n\n  ${(props) => props.checked && checkedStyles}\n`\n\nexport const Label = styled.label`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 13px;\n  line-height: 20px;\n  color: #4A4A4A;\n`\n\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n\nexport const TransferContainer = styled.div`\n  display: flex;\n  padding: 10px 20px;\n\n  &:hover {\n    background-color: #F1FCFF;\n  }\n\n  &:last-child {\n    padding: 10px 20px 20px;\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport {\n  StyledCheckbox,\n  Label,\n  HiddenCheckbox,\n  TransferContainer,\n} from './styled'\n\ntype TProps = {\n  name: string,\n  value: boolean,\n  title: string,\n  onChangeFilter: (string, string) => void,\n}\n\nconst handleChange = (event, name, onChangeFilter) => {\n  onChangeFilter(name, event.target.checked)\n}\n\nconst Transfer = ({\n  name,\n  value,\n  title,\n  onChangeFilter,\n}: TProps) => (\n  <TransferContainer>\n    <Label\n      htmlFor={name}\n      checked={value}\n    >\n      <StyledCheckbox\n        checked={value}\n      >\n        <HiddenCheckbox\n          id={name}\n          onChange={(event) => handleChange(event, name, onChangeFilter)}\n          checked={value}\n        />\n      </StyledCheckbox>\n      {title}\n    </Label>\n  </TransferContainer>\n)\n\nexport default Transfer\n","// @flow\n\nimport { BY_CHEAP_SORT, BY_QUICK_SORT } from '../Sorts/consts'\nimport type { TTickets } from '../../../types'\n\nconst sortingTickets = (tickets: TTickets, sortingKey: string) => {\n  if (!tickets.length || !sortingKey) return []\n\n  const sortTickets = [\n    ...tickets,\n  ]\n\n  switch (true) {\n    case (sortingKey === BY_CHEAP_SORT):\n      return sortTickets.sort((a, b) => a.price - b.price)\n    case (sortingKey === BY_QUICK_SORT):\n      return sortTickets.sort((a, b) => {\n        const aDuration = a.segments.reduce((acc, segment) => acc + segment.duration, 0)\n        const bDuration = b.segments.reduce((acc, segment) => acc + segment.duration, 0)\n\n        return aDuration - bDuration\n      })\n    default:\n      return sortTickets\n  }\n}\n\nexport default sortingTickets\n","// @flow\n\nimport {\n  ALL_TRANSFERS_FILTER,\n  TRANSFER_NONE,\n  TRANSFER_ONE,\n  TRANSFER_THREE,\n  TRANSFER_TWO,\n} from '../Filters/consts'\nimport type {\n  TTicket,\n  TTickets,\n  TFilters,\n} from '../../../types'\n\nconst filterTicket = (ticket: TTicket, filterKeys: string[]) => {\n  const stopsLength = ticket.segments.reduce((acc, segment) => segment.stops.length, 0)\n\n  return filterKeys.some((filterKey) => {\n    let isValidTicket\n\n    switch (true) {\n      case filterKey === TRANSFER_NONE: {\n        isValidTicket = stopsLength === 0\n        break\n      }\n      case filterKey === TRANSFER_ONE: {\n        isValidTicket = stopsLength === 1\n        break\n      }\n      case filterKey === TRANSFER_TWO: {\n        isValidTicket = stopsLength === 2\n        break\n      }\n      case filterKey === TRANSFER_THREE: {\n        isValidTicket = stopsLength === 3\n        break\n      }\n      default: {\n        isValidTicket = false\n      }\n    }\n\n    return isValidTicket\n  })\n}\n\nconst filteringTickets = (tickets: TTickets, filters: TFilters) => {\n  const filterKeys = Object.keys(filters)\n    .filter((key) => key !== ALL_TRANSFERS_FILTER && filters[key])\n\n  if (!tickets.length || !filterKeys.length) return []\n\n  if (filters[ALL_TRANSFERS_FILTER]) return tickets\n\n  const operatingTickets = [\n    ...tickets,\n  ]\n\n  return operatingTickets.filter((ticket) => filterTicket(ticket, filterKeys))\n}\n\nexport default filteringTickets\n","import { createSelector } from 'reselect'\nimport sortingTickets from './helpers/sortingTickets'\nimport filteringTickets from './helpers/filteringTickets'\n\nconst selectTicketsData = (state) => state.ticketsData\n\nexport const selectIsLoading = (state) => {\n  const ticketsData = selectTicketsData(state)\n\n  return ticketsData.isLoading\n}\n\nexport const selectIsCompletely = (state) => {\n  const ticketsData = selectTicketsData(state)\n\n  return ticketsData.isCompletely\n}\n\nexport const selectIsError = (state) => {\n  const ticketsData = selectTicketsData(state)\n\n  return ticketsData.isError\n}\n\n\nexport const selectFilters = (state) => state.filters\nexport const selectSorts = (state) => state.sorts\n\n\nconst selectTickets = (state) => {\n  const ticketsData = selectTicketsData(state)\n\n  return ticketsData.tickets\n}\n\nexport const selectFilteredTickets = createSelector(\n  selectFilters,\n  selectSorts,\n  selectTickets,\n  selectIsCompletely,\n  (\n    filters,\n    sorts,\n    tickets,\n    isCompletely,\n  ) => {\n    if (!tickets.length || !isCompletely) return []\n\n    const { key } = sorts\n    const filterTickets = filteringTickets(tickets, filters)\n\n    return sortingTickets(filterTickets, key)\n  },\n)\n","import styled from 'styled-components'\n\nexport const Card = styled.div`\n  background-color: #FFFFFF;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  width: 232px;\n  margin-right: 20px;\n`\n\nexport const Title = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 12px;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  padding: 20px 20px 0;\n`\n\nexport const TransfersWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Transfer from './components/Transfer'\nimport { selectFilters } from '../selectors'\nimport { actionCreators } from './ducks'\nimport {\n  Card,\n  Title,\n  TransfersWrapper,\n} from './styled'\nimport { TRANSFERS } from './consts'\nimport type { TFilters } from '../../../types'\n\ntype TProps = {\n  filters: TFilters,\n  changeFilter: (string, boolean) => void,\n}\n\nconst Filters = ({ filters, changeFilter }: TProps) => (\n  <Card>\n    <Title>\n      Количество пересадок\n    </Title>\n    <TransfersWrapper>\n      {Object.entries(filters).map(([key, value]) => (\n        <Transfer\n          key={key}\n          name={key}\n          value={value}\n          title={TRANSFERS[key]}\n          onChangeFilter={(name, checked) => changeFilter({ name, value: checked })}\n        />\n      ))}\n    </TransfersWrapper>\n  </Card>\n)\n\nconst mapStateToProps = (state) => ({\n  filters: selectFilters(state),\n})\n\nconst mapDispatchToProps = {\n  ...actionCreators,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters)\n","import styled from 'styled-components'\n\nexport const SortingButton = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 20px;\n  text-transform: uppercase;\n  padding: 15px 57px;\n  border: ${({ isSelected }) => (isSelected ? 'none' : '1px solid #DFE5EC')};\n  color: ${({ isSelected }) => (isSelected ? '#FFFFFF' : '#4A4A4A')};\n  background-color: ${({ isSelected }) => (isSelected ? '#2196F3' : '#FFFFFF')};\n\n  &:first-child {\n    border-radius: 6px 0 0 6px;\n  }\n\n  &:last-child {\n    border-radius: 0 6px 6px 0;\n  }\n\n  cursor: pointer;\n  width: 50%;\n`\n","// @flow\n\nimport React from 'react'\nimport {\n  SortingButton,\n} from './styled'\n\ntype TProps = {\n  name: string,\n  value: boolean,\n  title: string,\n  onChangeSort: (string) => void,\n}\n\nconst handleChange = (name, onChangeSort) => onChangeSort(name)\n\nconst SortTab = ({\n  name,\n  value,\n  title,\n  onChangeSort,\n}: TProps) => (\n  <SortingButton\n    isSelected={value}\n    onClick={() => handleChange(name, onChangeSort)}\n  >\n    {title}\n  </SortingButton>\n)\n\nexport default SortTab\n","import styled from 'styled-components'\n\nexport const SortTabs = styled.div`\n  display: flex;\n  width: 100%;\n  margin-bottom: 20px;\n`\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { selectSorts } from '../selectors'\nimport { actionCreators } from './ducks'\nimport { SORTS } from './consts'\nimport SortTab from './components/SortTab'\nimport {\n  SortTabs,\n} from './styled'\nimport type { TSorts } from '../../../types'\n\ntype TProps = {\n  sorts: TSorts,\n  changeSort: (string) => void,\n}\n\nconst Sorts = ({ sorts, changeSort }: TProps) => (\n  <SortTabs>\n    {Object.entries(SORTS).map(([key, value]) => (\n      <SortTab\n        key={key}\n        name={key}\n        value={sorts.key === key}\n        title={value}\n        onChangeSort={(name) => changeSort({ name })}\n      />\n    ))}\n  </SortTabs>\n)\n\nconst mapStateToProps = (state) => ({\n  sorts: selectSorts(state),\n})\n\nconst mapDispatchToProps = {\n  ...actionCreators,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sorts)\n","// @flow\n\nconst CARRIER_IMG_URL = 'https://pics.avs.io/99/36/'\n\ntype TArgs = {\n  iataCode: string,\n  isRetina?: boolean,\n}\n\nconst getCarrierImg = ({ iataCode, isRetina = false }: TArgs): string => {\n  if (isRetina) {\n    return `${CARRIER_IMG_URL}${iataCode}@2x.png`\n  }\n\n  return `${CARRIER_IMG_URL}${iataCode}.png`\n}\n\nexport default getCarrierImg\n","// @flow\n\nconst getFormattedPrice = (price: number): string => {\n  const formattedPrice = price.toLocaleString('ru-RU')\n\n  return `${formattedPrice} Р`\n}\n\nexport default getFormattedPrice\n","import styled from 'styled-components'\n\nexport const Title = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  color: #A0B0B9;\n`\n\nexport const Text = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  color: #4A4A4A\n`\n\nexport const SegmentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0 20px;\n\n  & + & {\n    padding: 10px 20px 20px;\n  }\n`\n\nexport const SegmentDataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 141px;\n`\n","// @flow\n\nimport moment from 'moment'\n\nconst getFormattedMinutes = (date: Date) => {\n  const formattedMinute = String(moment(date).minutes())\n\n  if (formattedMinute.length < 2) {\n    return formattedMinute.padStart(2, '0')\n  }\n\n  return formattedMinute\n}\n\nconst getFormattedHours = (date: Date) => {\n  const formattedHours = String(moment(date).hours())\n\n  if (formattedHours.length < 2) {\n    return formattedHours.padStart(2, '0')\n  }\n\n  return formattedHours\n}\n\nconst getFormattedArrivalTime = (departureTime: Date, duration: number) => (\n  moment(departureTime).add(duration, 'minutes')\n)\n\nconst getFormattedTime = (date: string, duration: number): string => {\n  const formattedDepartureTime = moment(date)\n  const formattedArrivalTime = getFormattedArrivalTime(formattedDepartureTime, duration)\n\n  const departureMinute = getFormattedMinutes(formattedDepartureTime)\n  const departureHours = getFormattedHours(formattedDepartureTime)\n  const departureTime = `${departureHours}:${departureMinute}`\n\n  const arrivalMinute = getFormattedMinutes(formattedArrivalTime)\n  const arrivalHours = getFormattedHours(formattedArrivalTime)\n  const arrivalTime = `${arrivalHours}:${arrivalMinute}`\n\n  return `${departureTime} - ${arrivalTime}`\n}\n\nexport default getFormattedTime\n","// @flow\n\nconst getDurationWithUnit = (duration: number, unit: string) => {\n  if (duration) {\n    return `${duration}${unit}`\n  }\n\n  return null\n}\n\n\nconst getFormattedDuration = (duration: number): string => {\n  const hours = Math.floor(duration / 60)\n  const minutes = duration % 60\n\n  const formattedHours = getDurationWithUnit(hours, 'ч')\n  const formattedMinutes = getDurationWithUnit(minutes, 'м')\n\n  return [formattedHours, formattedMinutes].filter((item) => item).join(' ')\n}\n\nexport default getFormattedDuration\n","// @flow\n\nconst TRANSFER_TEXT = 'пересад'\n\nconst getTransferMessage = (\n  transfersLength: number,\n  end: string,\n) => `${transfersLength} ${TRANSFER_TEXT}${end}`\n\nconst getTransfersCount = (transfersLength: number): string => {\n  switch (true) {\n    case transfersLength === 1:\n      return getTransferMessage(transfersLength, 'ка')\n    case transfersLength < 5 && transfersLength > 1:\n      return getTransferMessage(transfersLength, 'ки')\n    case transfersLength < 20 && transfersLength > 1:\n      return getTransferMessage(transfersLength, 'ок')\n    default:\n      return 'Нет пересадок'\n  }\n}\n\nexport default getTransfersCount\n","// @flow\n\nimport React, { Fragment } from 'react'\nimport {\n  SegmentDataWrapper,\n  Text,\n  Title,\n  SegmentWrapper,\n} from './styled'\nimport getFormattedTime from './helpers/getFormattedTime'\nimport getFormattedDuration from './helpers/getFormattedDuration'\nimport getTransfersCount from './helpers/getTransfersCount'\nimport type { TSegment } from '../../../../types'\n\ntype TSegmentData = {\n  title: string,\n  children: Element<any>,\n}\n\nconst getSegmentDirection = (origin, destination) => `${origin} - ${destination}`\n\nconst SegmentData = ({ title, children }: TSegmentData) => (\n  <SegmentDataWrapper>\n    <Title>\n      {title}\n    </Title>\n    <Text>\n      {children}\n    </Text>\n  </SegmentDataWrapper>\n)\n\nconst Segment = ({ segment }: TSegment) => {\n  const {\n    origin,\n    destination,\n    date,\n    duration,\n    stops,\n  } = segment\n\n  const stopLength = stops.length\n\n  return (\n    <SegmentWrapper>\n      <SegmentData\n        title={getSegmentDirection(origin, destination)}\n      >\n        {getFormattedTime(date, duration)}\n      </SegmentData>\n      <SegmentData\n        title=\"В пути\"\n      >\n        {getFormattedDuration(duration)}\n      </SegmentData>\n      <SegmentData\n        title={getTransfersCount(stopLength)}\n      >\n        {stops.map((stop, index) => (\n          <Fragment\n            key={stop}\n          >\n            {stop}\n            {index !== stopLength - 1 && ', '}\n          </Fragment>\n        ))}\n      </SegmentData>\n    </SegmentWrapper>\n  )\n}\n\nexport default Segment\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n\n  & + & {\n    margin-top: 10px;\n  }\n`\n\nexport const Price = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 24px;\n  color: #2196F3;\n`\n\nexport const Carrier = styled.img.attrs(({ iata, src, srcRetina }) => ({\n  srcSet: `${src} 1x, ${srcRetina} 2x`,\n  alt: iata,\n}))`\n  height: 36px;\n  width: auto;\n`\n\nexport const TicketHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 30px 20px 20px;\n`\n","// @flow\n\nimport React from 'react'\nimport getCarrierImg from './helpers/getCarrierImg'\nimport getFormattedPrice from './helpers/getFormattedPrice'\nimport Segment from './components/Segment'\nimport {\n  Wrapper, Price, Carrier, TicketHeader,\n} from './styled'\nimport type { TTicket } from '../../types'\n\nconst Ticket = ({ ticket }: TTicket) => {\n  const { price, carrier, segments } = ticket\n\n  return (\n    <Wrapper>\n      <TicketHeader>\n        <Price>{getFormattedPrice(price)}</Price>\n        <Carrier\n          src={getCarrierImg({ iataCode: carrier })}\n          srcRetina={getCarrierImg({ iataCode: carrier, isRetina: true })}\n          iata={carrier}\n        />\n      </TicketHeader>\n      {segments.map((segment) => {\n        const { date } = segment\n        const key = new Date(date).getTime()\n\n        return (\n          <Segment\n            key={key}\n            segment={segment}\n          />\n        )\n      })}\n    </Wrapper>\n  )\n}\n\nexport default Ticket\n","import styled from 'styled-components'\n\nexport const TicketsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  width: 100%;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: #FFFFFF;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  width: 232px;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 12px;\n  text-transform: uppercase;\n  padding: 40px;\n`\n","// @flow\n\nimport React from 'react'\nimport Card from './styled'\n\ntype TProps = {\n  text: string,\n}\n\nconst InformationCard = ({ text } : TProps) => (\n  <Card>\n    {text}\n  </Card>\n)\n\nexport default InformationCard\n","// @flow\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Ticket from '../Ticket'\nimport { TicketsWrapper } from './styled'\nimport {\n  selectIsLoading,\n  selectIsError,\n  selectFilteredTickets,\n  selectIsCompletely,\n} from './selectors'\nimport type { TTickets } from '../../types'\nimport InformationCard from '../InformationCard'\n\nconst TicketsList = ({ tickets, isCompletely, isError }: TTickets) => {\n  if (!isCompletely || isError) {\n    return (\n      <InformationCard\n        text=\"Идет загрузка билетов, пожалуйста подождите.....\"\n      />\n    )\n  }\n\n  if (isCompletely && isError) {\n    return (\n      <InformationCard\n        text=\"Произошла ошибка загрузки билетов, пожалуйста перезагрузите страницу\"\n      />\n    )\n  }\n\n  if (!tickets.length) {\n    return (\n      <InformationCard\n        text=\"Расслабьте фильтры\"\n      />\n    )\n  }\n\n  return (\n    <TicketsWrapper>\n      {tickets.slice(0, 20).map((ticket, index) => {\n        const { carrier, price } = ticket\n        const key = carrier + price + index\n\n        return (\n          <Ticket\n            key={key}\n            ticket={ticket}\n          />\n        )\n      })}\n    </TicketsWrapper>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tickets: selectFilteredTickets(state),\n  isLoading: selectIsLoading(state),\n  isCompletely: selectIsCompletely(state),\n  isError: selectIsError(state),\n})\n\nexport default connect(mapStateToProps, null)(TicketsList)\n","import styled from 'styled-components'\nimport plain from './assets/plain.svg'\n\nexport const Logo = styled.div`\n  width: 60px;\n  height: 60px;\n  background-image: url(${plain});\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: contain;\n`\n","// @flow\n\nimport React from 'react'\nimport { Logo } from './styled'\n\nexport default () => (\n  <Logo />\n)\n","import styled from 'styled-components'\n\nexport const Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Main = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 754px;\n  justify-content: center;\n  align-items: flex-start;\n  margin: 0 103px;\n`\n\nexport const Header = styled.div`\n  flex: 0 0 auto;\n  display: flex;\n  justify-content: center;\n  padding: 50px 0;\n  width: 100%;\n`\n\nexport const SideBar = styled.div`\n   flex: 0;\n   position: sticky;\n   top: 10px;\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  flex-wrap: wrap;\n`\n","// @flow\n\nimport React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Filters from '../../components/TicketsList/Filters'\nimport Sorts from '../../components/TicketsList/Sorts'\nimport TicketsList from '../../components/TicketsList'\nimport Logo from '../../components/Logo'\nimport { actionCreators } from './ducks'\nimport {\n  Page,\n  Container,\n  Header,\n  SideBar,\n  Content,\n  Main,\n} from './styled'\n\ntype TProps = {\n  getTickets: () => void,\n}\n\nclass App extends PureComponent<TProps> {\n  componentDidMount() {\n    const { getTickets } = this.props\n\n    getTickets()\n  }\n\n  render() {\n    return (\n      <Page>\n        <Header>\n          <Container>\n            <Logo />\n          </Container>\n        </Header>\n        <Main>\n          <Container>\n            <SideBar>\n              <Filters />\n            </SideBar>\n            <Content>\n              <Sorts />\n              <TicketsList />\n            </Content>\n          </Container>\n        </Main>\n      </Page>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  ...actionCreators,\n}\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}